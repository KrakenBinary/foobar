#!/usr/bin/python
# -*- coding:utf-8 -*-
'''
test
'''
import unittest
import solution


class TestStringMethods(unittest.TestCase):
    '''
    s0 = [[1,1]]                    = (1)
    s1 = [[2,1]]                    = (3)
    s2 = [[2,3], [3,1]]             = (4,5)
    s3 = [[2,5],[5,3],[3,4],[4,1]]  = (7,8,7,5)

    m-f = m (step.n-1)
    f-m = f (step.n-1)
    '''
    def test_case1(self):
        '''provided test 1'''
        self.assertEqual(solution.solution('4', '7'), 4, 'FAIL :: 4|7=4')

    def test_case2(self):
        '''provided test 2'''
        self.assertEqual(solution.solution('2', '1'), 1, 'FAIL :: 2|1=1')

    def test_hide1(self):
        '''basic test area'''
        self.assertEqual(solution.solution('42', '42'), 0, 'FAIL :: 1|1=0')

    def test_hide2(self):
        '''need to use BigInteger'''
        self.assertEqual(solution.solution('10', '1'), 0, 'FAIL :: 1T|1=0')

    def test_hide3(self):
        '''Should not be solvable'''
        self.assertEqual(solution.solution('8', '4'), 0, 'FAIL :: 1|1=0')


if __name__ == '__main__':
    unittest.main()
